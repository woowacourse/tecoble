{"version":3,"file":"14cad5d5-02f40b4c01e09ac33ba3.js","mappings":"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","sources":["webpack://Tecoble/./src/components/PostCard.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport _ from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport type { PageContext } from '../templates/post';\nimport { AuthorList } from './AuthorList';\nimport defaultImage from '../content/img/tecoble-background.png';\n\nexport type PostCardProps = {\n  post: PageContext;\n  isLarge?: boolean;\n};\n\nexport function PostCard({ post, isLarge = false }: PostCardProps) {\n  const { frontmatter, fields, excerpt, timeToRead } = post;\n  const date = new Date(frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <article\n      className={`post-card ${frontmatter.image ? '' : 'no-image'} ${\n        isLarge ? 'post-card-isLarge' : ''\n      }`}\n      css={[PostCardStyles, isLarge && PostCardLarge]}\n    >\n      {frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {frontmatter?.image && (\n              <GatsbyImage\n                image={getImage(post.frontmatter.image)!}\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                loading={isLarge ? 'eager' : 'lazy'}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      {!frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            <img\n              alt={`${frontmatter.title} cover image`}\n              style={{ height: '100%', width: '100%' }}\n              src={defaultImage}\n            />\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={fields.slug}>\n          <PostCardHeader className=\"post-card-header\">\n            <PostCardPrimaryTag className=\"post-card-primary-tag\">\n              {frontmatter.tags.length > 0 && `#${frontmatter.tags[0]}`}\n            </PostCardPrimaryTag>\n            <PostCardTitle className=\"post-card-title\">{frontmatter.title}</PostCardTitle>\n          </PostCardHeader>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{frontmatter.excerpt || excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList authors={frontmatter.author} tooltip=\"small\" />\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span>\n              {frontmatter.author.map((author, index) => (\n                <React.Fragment key={author.name}>\n                  <Link to={`/author/${_.kebabCase(author.name)}/`}>{author.name}</Link>\n                  {frontmatter.author.length - 1 > index && ', '}\n                </React.Fragment>\n              ))}\n            </span>\n            <span className=\"post-card-byline-date\">\n              <time dateTime={datetime}>{displayDatetime}</time>{' '}\n              <span className=\"bull\">&bull;</span> {timeToRead} min read\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n}\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 40px;\n  padding: 0 20px 40px;\n  min-height: 220px;\n  /* border-bottom: 1px solid color(var(--lightgrey) l(+12%)); */\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  background-size: cover;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-bottom-color: color(var(--darkmode) l(+8%)); */\n    border-bottom-color: ${lighten('0.08', colors.darkmode)};\n  }\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  /* color: var(--darkgrey); */\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  height: 25px;\n  margin: 0 0 0.2em;\n  /* color: var(--blue); */\n  color: ${colors.blue};\n  font-size: 1.7rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  }\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 4px 0 0 10px;\n  /* color: color(var(--midgrey) l(+10%)); */\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: color(var(--darkgrey) l(+20%)); */\n    color: ${lighten('0.2', colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n`;\n\nconst PostCardHeader = styled.header`\n  margin: 15px 0 0;\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n"],"names":["PostCard","post","isLarge","frontmatter","fields","excerpt","timeToRead","date","Date","datetime","format","displayDatetime","___EmotionJSX","className","image","css","PostCardStyles","PostCardLarge","Link","PostCardImageLink","to","slug","PostCardImage","GatsbyImage","getImage","alt","title","style","height","loading","width","src","defaultImage","PostCardContent","PostCardContentLink","PostCardHeader","PostCardPrimaryTag","tags","length","PostCardTitle","PostCardExcerpt","PostCardMeta","AuthorList","authors","author","tooltip","PostCardBylineContent","map","index","React","key","name","_kebabCase","dateTime","lighten","colors","lightgrey","darkmode","styles","_styled","target","darkgrey","blue","midgrey","AuthorProfileImage"],"sourceRoot":""}