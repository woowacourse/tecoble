{"version":3,"sources":["webpack:///./src/templates/tags.tsx","webpack:///./src/components/Footer.tsx"],"names":["Tags","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","tagData","allTagYaml","find","n","node","id","toLowerCase","lang","config","title","name","content","description","property","siteUrl","pathname","facebook","twitter","split","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","isHome","SiteHeaderBackground","backgroundImage","image","childImageSharp","fluid","src","toUpperCase","SiteMain","PostFeed","map","key","fields","slug","post","Footer","SiteFooter","SiteFooterContent","to","Date","getFullYear","footer","SiteFooterNav","href","target","rel","setLightness","colors","darkgrey","styled","nav"],"mappings":"2FACA,4IA6HeA,UAvEF,SAAC,GAAsD,YAApDC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,SAC3BC,EAAMH,EAAYG,IAAMH,EAAYG,IAAM,GAChD,EAA8BF,EAAKG,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAUN,EAAKO,WAAWH,MAAMI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,GAAGC,gBAAkBV,EAAIU,iBAEhF,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,oBAAMC,KAAMC,IAAOD,OACnB,yBACGX,EADH,MACWY,IAAOC,OAElB,oBAAMC,KAAK,cAAcC,QAASX,WAASI,KAAOJ,EAAQI,KAAKQ,YAAc,KAC7E,oBAAMC,SAAS,eAAeF,QAASH,IAAOC,QAC9C,oBAAMI,SAAS,UAAUF,QAAQ,YACjC,oBAAME,SAAS,WAAWF,QAAYf,EAAL,MAAcY,IAAOC,QACtD,oBAAMI,SAAS,SAASF,QAASH,IAAOM,QAAUnB,EAASoB,WAC1DP,IAAOQ,UAAY,oBAAMH,SAAS,oBAAoBF,QAASH,IAAOQ,WACvE,oBAAMN,KAAK,eAAeC,QAAQ,wBAClC,oBAAMD,KAAK,gBAAgBC,QAAYf,EAAL,MAAcY,IAAOC,QACvD,oBAAMC,KAAK,cAAcC,QAASH,IAAOM,QAAUnB,EAASoB,WAC3DP,IAAOS,SACN,oBACEP,KAAK,eACLC,QAAO,IAAMH,IAAOS,QAAQC,MAAM,wBAAwB,MAIhE,YAAC,IAAD,KACE,sBAAQC,UAAU,sBAAsBC,IAAK,CAACC,IAAYC,MACxD,mBAAKF,IAAK,CAACG,IAAOC,MAChB,mBAAKJ,IAAKK,KACR,YAAC,IAAD,CAASC,QAAQ,MAGrB,YAAC,IAAD,CACEN,IAAK,CAACG,IAAOI,KACbC,gBAAiB5B,SAAF,UAAEA,EAASI,YAAX,iBAAE,EAAeyB,aAAjB,iBAAE,EAAsBC,uBAAxB,iBAAE,EAAuCC,aAAzC,aAAE,EAA8CC,IAC/Db,UAAU,0BAEV,YAAC,IAAD,CAAmBC,IAAKK,IAAON,UAAU,uBACvC,YAAC,IAAD,CAAWA,UAAU,cAAc,IAAMvB,EAAIqC,eAC7C,YAAC,IAAD,CAAiBd,UAAU,oBACxBnB,WAASI,KAAKQ,YACbZ,EAAQI,KAAKQ,YAEb,iDACmBb,EAAa,GAAQA,EAArB,SACD,IAAfA,GAAoB,SACL,IAAfA,GAAoB,gBAOjC,oBAAMM,GAAG,YAAYe,IAAK,CAACc,IAAUX,MACnC,mBAAKH,IAAKK,KACR,mBAAKL,IAAK,CAACe,MACRrC,EAAMsC,KAAI,gBAAGhC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CAAUiC,IAAKjC,EAAKkC,OAAOC,KAAMC,KAAMpC,UAK/C,YAAC,IAAD,U,0LC9GKqC,EAAmB,WAC9B,OACE,sBAAQrB,IAAK,CAACG,IAAOmB,IACnB,mBAAKtB,IAAK,CAACK,IAAOkB,IAChB,uBAASxB,UAAU,aACjB,YAAC,IAAD,CAAMyB,GAAG,KAAKpC,IAAOC,OADvB,OAC6C,IAAIoC,MAAOC,cAAe,IACpEtC,IAAOuC,QACN,YAAC,IAAD,CAAMH,GAAG,KAAT,KACKpC,IAAOC,MADZ,IACoBD,IAAOuC,SAI/B,YAACC,EAAD,KACE,YAAC,IAAD,CAAMJ,GAAG,KAAT,gBACCpC,IAAOQ,UACN,iBAAGiC,KAAMzC,IAAOQ,SAAUkC,OAAO,SAASC,IAAI,uBAA9C,YAID3C,IAAOS,SACN,iBAAGgC,KAAMzC,IAAOS,QAASiC,OAAO,SAASC,IAAI,uBAA7C,WAKF,iBAAGF,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAAxE,UAIA,iBAAGF,KAAK,YAAR,WAOJP,EAAatB,YAAH,qIAKAgC,YAAa,SAAUC,IAAOC,WAGxCX,EAAoBvB,YAAH,4XAmBjB4B,EAAgBO,IAAOC,IAAV","file":"component---src-templates-tags-tsx-177bde21d0aca876fd98.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { FluidObject } from 'gatsby-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteNavMain,\n  SiteArchiveHeader,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\n\ninterface TagTemplateProps {\n  location: Location;\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: FluidObject;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst Tags = ({ pageContext, data, location }: TagTemplateProps) => {\n  const tag = pageContext.tag ? pageContext.tag : '';\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagData = data.allTagYaml.edges.find(n => n.node.id.toLowerCase() === tag.toLowerCase());\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {tag} - {config.title}\n        </title>\n        <meta name=\"description\" content={tagData?.node ? tagData.node.description : ''} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n          <ResponsiveHeaderBackground\n            css={[outer, SiteHeaderBackground]}\n            backgroundImage={tagData?.node?.image?.childImageSharp?.fluid?.src}\n            className=\"site-header-background\"\n          >\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">{'#' + tag.toUpperCase()}</SiteTitle>\n              <SiteDescription className=\"site-description\">\n                {tagData?.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\n                    {totalCount === 1 && '1 post'}\n                    {totalCount === 0 && 'No posts'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            excerpt\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"https://github.com/scttcper/gatsby-casper\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Casper\n          </a>\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\n"],"sourceRoot":""}